@using Microsoft.AspNetCore.Identity;
@using TMelix.Data;
@model IEnumerable<TMelix.Models.Utilizador>

@{
    ViewData["Title"] = "Utilizadores";
}

<script src="https://kit.fontawesome.com/f9a7bbed8a.js" crossorigin="anonymous"></script>

@inject UserManager<ApplicationUser> _userManager
@inject SignInManager<ApplicationUser> _signInManager

<link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
<h1>@ViewData["Title"]</h1>

@if(_signInManager.IsSignedIn(User) && !User.IsInRole("Administrador")){

    var userId = _userManager.GetUserId(User);

    var cliente = Model.FirstOrDefault(s => s.UserID.ToString() == userId);
    var user = await _userManager.FindByIdAsync(cliente.UserID); 

     var funcao = user?.Funcao; 

     <div style="width:300px" class="flex-container space-between">


    <div class="col card">
        <div class="img-placeholder">
            <img src="~/Fotos/userFoto.png">
        </div>
        <div>
            <br>
            <h3 style="color:black">@Html.DisplayFor(modelItem => cliente.Nome)</h3>
            <p><i class="fa-solid fa-user"></i> @Html.DisplayFor(modelItem => cliente.UserF)</p>
            <p><i class="fa-solid fa-envelope"></i> @Html.DisplayFor(modelItem => cliente.Email)</p>
                <p><i class="fa-solid fa-location-dot"></i> @Html.DisplayFor(modelItem => cliente.Morada), @Html.DisplayFor(modelItem => cliente.Pais)</p>
        </div>
        <br>
            <div class="movie_social" style="position:absolute;right:0; height: 35px; bottom:0;">
            <ul>
                <li><a asp-action="Details" asp-route-id="@cliente.Id" class="material-icons">add</a></li>
                <li><a asp-action="Edit" asp-route-id="@cliente.Id" class="material-icons">edit</a></li>

            </ul>
        </div>
    </div>
    </div>



}else{
   
        <a class="button-34 a1" asp-action="Create">Crie um novo utilizador</a>
    
    
    <div class="flex-container space-between">

    @foreach (var item in Model)
    {

        var user = await _userManager.FindByIdAsync(item.UserID); // Access user using _userManager
        var funcao = user?.Funcao; // Access Funcao from the user


            <div class="col card">
                <div class="img-placeholder">
                    <img src="~/Fotos/userFoto.png">
                </div>
                <div>
                    <br>
                    <h3 style="color:black">@Html.DisplayFor(modelItem => item.Nome)</h3>
                    <p><i class="fa-solid fa-user"></i> @Html.DisplayFor(modelItem => item.UserF)</p>
                    <p><i class="fa-solid fa-envelope"></i> @Html.DisplayFor(modelItem => item.Email)</p>
                    <p><i class="fa-solid fa-location-dot"></i> @Html.DisplayFor(modelItem => item.Morada), @Html.DisplayFor(modelItem => item.Pais)</p>
                </div>
                <br>
                <div class="movie_social" style="position:absolute;right:0; height: 35px; bottom:0;">
                    <ul>
                        <li><a asp-action="Details" asp-route-id="@item.Id" class="material-icons">add</a></li>
                        <li><a asp-action="Edit" asp-route-id="@item.Id" class="material-icons">edit</a></li>
                        <li><a asp-action="Delete" asp-route-id="@item.Id" class="material-icons">delete</a></li>

                    </ul>
                </div>
            </div>
    }
    </div>
   
}



   


